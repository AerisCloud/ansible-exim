--- # Generated by ansible-role-test 0.1.0
# The name of your test
name: "Aeriscloud.exim"
# The containers you will use for this test, you could for example spawn a debian
# centos, ubuntu, etc... and run the tests on "all" hosts
# If skipped, tests will be run on every containers available
#containers:
#  master1: 'centos:6'
#  slave1:
#    image: 'centos:7'
#    vars:
#      host_var1: foobar # defines host_var1 on this host on particular
#  slave2: 'centos:7'
#  slave3: 'debian:wheezy'
# You can also setup custom inventory groups to be declared in the inventory, if
# no containers are declared above, they will be merged with the default groups.
# For exemple the following declaration will create 2 groups, master and slaves.
#groups:
#  masters:
#  - master1
#  slaves:
#  - slave1
#  - slave2
#  - slave3
# This is your test playbook
playbook:
- hosts: all
  sudo: true
# You should have your role called in roles, with the proper variables set, you
# can call the same role several times in a row but I'd rather recommend creating
# separate test files for each call to ensure that they run in a clean env
  roles:
# "@ROLE_NAME@" is a magic variable that will be replaced by the name of the role
# on your filesystem before running the tests
  - role: "@ROLE_NAME@"
# Some extra variables if necessary
#    var1: something
#    var2: something
# You should verify that your role executed properly here, using tasks
#  tasks:
#  - name: "Check that my-role did that thing properly"
#    module: do-something
  tasks:
    - name: "Make sure the binary is present in the filesystem."
      shell: |
        executable=/bin/bash
        test -e /usr/sbin/exim